-- =====================================================
-- PAKISTAN SALES DATA ANALYSIS PROJECT
-- OLAP DATA WAREHOUSE SETUP (Analytical Database)
-- =====================================================
-- This script creates the analytical data warehouse for business intelligence
-- OLAP = Online Analytical Processing (Denormalized, Star Schema)

USE ROLE ACCOUNTADMIN;

-- =====================================================
-- 1. CREATE OLAP DATABASE AND SCHEMAS
-- =====================================================

-- Main OLAP database for analytics
CREATE OR REPLACE DATABASE PAKISTAN_SALES_OLAP_DB
    DATA_RETENTION_TIME_IN_DAYS = 30
    MAX_DATA_EXTENSION_TIME_IN_DAYS = 365
    COMMENT = 'OLAP Database for Pakistan Sales Data - Analytical Operations';

-- Create schemas for different analytical purposes
CREATE OR REPLACE SCHEMA PAKISTAN_SALES_OLAP_DB.DIMENSIONS
    COMMENT = 'Dimension tables for the star schema';

CREATE OR REPLACE SCHEMA PAKISTAN_SALES_OLAP_DB.FACTS
    COMMENT = 'Fact tables for the star schema';

CREATE OR REPLACE SCHEMA PAKISTAN_SALES_OLAP_DB.AGGREGATES
    COMMENT = 'Pre-aggregated data for performance';

CREATE OR REPLACE SCHEMA PAKISTAN_SALES_OLAP_DB.ANALYTICS
    COMMENT = 'Analytical views and derived metrics';

-- =====================================================
-- 2. CREATE WAREHOUSES FOR OLAP
-- =====================================================

-- Warehouse for OLAP operations (larger, for complex queries)
CREATE OR REPLACE WAREHOUSE PAKISTAN_OLAP_WH
    WAREHOUSE_SIZE = 'SMALL'
    AUTO_SUSPEND = 300
    AUTO_RESUME = TRUE
    MIN_CLUSTER_COUNT = 1
    MAX_CLUSTER_COUNT = 4
    SCALING_POLICY = 'STANDARD'
    COMMENT = 'Warehouse for OLAP analytical operations';

-- Warehouse for data processing and ETL
CREATE OR REPLACE WAREHOUSE PAKISTAN_ETL_WH
    WAREHOUSE_SIZE = 'MEDIUM'
    AUTO_SUSPEND = 600
    AUTO_RESUME = TRUE
    MIN_CLUSTER_COUNT = 1
    MAX_CLUSTER_COUNT = 5
    SCALING_POLICY = 'STANDARD'
    COMMENT = 'Warehouse for ETL and data processing operations';

-- =====================================================
-- 3. CREATE DIMENSION TABLES (Star Schema)
-- =====================================================

USE SCHEMA PAKISTAN_SALES_OLAP_DB.DIMENSIONS;

-- Time dimension (most important for analytics)
CREATE OR REPLACE TABLE DIMENSIONS.DIM_TIME (
    TIME_KEY INT PRIMARY KEY, -- YYYYMMDD format
    FULL_DATE DATE NOT NULL,
    YEAR INT NOT NULL,
    QUARTER INT NOT NULL,
    QUARTER_NAME STRING NOT NULL,
    MONTH INT NOT NULL,
    MONTH_NAME STRING NOT NULL,
    MONTH_SHORT STRING NOT NULL,
    WEEK INT NOT NULL,
    DAY_OF_YEAR INT NOT NULL,
    DAY_OF_MONTH INT NOT NULL,
    DAY_OF_WEEK INT NOT NULL,
    DAY_NAME STRING NOT NULL,
    DAY_SHORT STRING NOT NULL,
    IS_WEEKEND BOOLEAN NOT NULL,
    IS_HOLIDAY BOOLEAN DEFAULT FALSE,
    FISCAL_YEAR INT,
    FISCAL_QUARTER INT,
    SEASON STRING,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Time dimension for all date-based analytics';

-- Customer dimension (denormalized for analytics)
CREATE OR REPLACE TABLE DIMENSIONS.DIM_CUSTOMER (
    CUSTOMER_KEY INT PRIMARY KEY,
    CUSTOMER_ID INT NOT NULL,
    CUSTOMER_FULL_NAME STRING NOT NULL,
    FIRST_NAME STRING NOT NULL,
    LAST_NAME STRING NOT NULL,
    EMAIL STRING,
    PHONE STRING,
    DATE_OF_BIRTH DATE,
    AGE INT,
    AGE_GROUP STRING,
    GENDER STRING,
    MARITAL_STATUS STRING,
    EDUCATION_LEVEL STRING,
    ANNUAL_INCOME DECIMAL(12,2),
    INCOME_BAND STRING,
    CUSTOMER_SEGMENT STRING,
    REGISTRATION_DATE DATE,
    DAYS_SINCE_REGISTRATION INT,
    CUSTOMER_TIER STRING,
    IS_ACTIVE BOOLEAN,
    -- Address information (denormalized)
    PRIMARY_ADDRESS STRING,
    PRIMARY_CITY STRING,
    PRIMARY_PROVINCE STRING,
    PRIMARY_POSTAL_CODE STRING,
    PRIMARY_COUNTRY STRING,
    -- Calculated fields
    TOTAL_ORDERS INT DEFAULT 0,
    TOTAL_SPENT DECIMAL(15,2) DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) DEFAULT 0,
    LAST_ORDER_DATE DATE,
    DAYS_SINCE_LAST_ORDER INT,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Customer dimension with denormalized attributes for analytics';

-- Product dimension (denormalized for analytics)
CREATE OR REPLACE TABLE DIMENSIONS.DIM_PRODUCT (
    PRODUCT_KEY INT PRIMARY KEY,
    PRODUCT_ID INT NOT NULL,
    PRODUCT_NAME STRING NOT NULL,
    PRODUCT_CODE STRING,
    CATEGORY_ID INT NOT NULL,
    CATEGORY_NAME STRING NOT NULL,
    CATEGORY_DESCRIPTION STRING,
    BRAND STRING NOT NULL,
    MODEL STRING,
    DESCRIPTION STRING,
    UNIT_COST DECIMAL(10,2),
    UNIT_PRICE DECIMAL(10,2),
    MSRP DECIMAL(10,2),
    PROFIT_MARGIN DECIMAL(10,2),
    PROFIT_MARGIN_PERCENT DECIMAL(5,2),
    WEIGHT_KG DECIMAL(8,3),
    DIMENSIONS_CM STRING,
    IS_ACTIVE BOOLEAN,
    -- Calculated fields
    TOTAL_QUANTITY_SOLD INT DEFAULT 0,
    TOTAL_REVENUE DECIMAL(15,2) DEFAULT 0,
    TOTAL_PROFIT DECIMAL(15,2) DEFAULT 0,
    AVG_ORDER_QUANTITY DECIMAL(8,2) DEFAULT 0,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Product dimension with denormalized attributes for analytics';

-- Store dimension (denormalized for analytics)
CREATE OR REPLACE TABLE DIMENSIONS.DIM_STORE (
    STORE_KEY INT PRIMARY KEY,
    STORE_ID INT NOT NULL,
    STORE_NAME STRING NOT NULL,
    STORE_CODE STRING NOT NULL,
    ADDRESS STRING NOT NULL,
    CITY STRING NOT NULL,
    PROVINCE STRING NOT NULL,
    POSTAL_CODE STRING,
    PHONE STRING,
    EMAIL STRING,
    STORE_TYPE STRING,
    MANAGER_ID INT,
    MANAGER_NAME STRING,
    OPENING_DATE DATE,
    DAYS_SINCE_OPENING INT,
    IS_ACTIVE BOOLEAN,
    -- Calculated fields
    TOTAL_ORDERS INT DEFAULT 0,
    TOTAL_SALES DECIMAL(15,2) DEFAULT 0,
    TOTAL_CUSTOMERS INT DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) DEFAULT 0,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Store dimension with denormalized attributes for analytics';

-- Employee dimension (denormalized for analytics)
CREATE OR REPLACE TABLE DIMENSIONS.DIM_EMPLOYEE (
    EMPLOYEE_KEY INT PRIMARY KEY,
    EMPLOYEE_ID INT NOT NULL,
    EMPLOYEE_FULL_NAME STRING NOT NULL,
    FIRST_NAME STRING NOT NULL,
    LAST_NAME STRING NOT NULL,
    EMAIL STRING,
    PHONE STRING,
    HIRE_DATE DATE,
    DAYS_EMPLOYED INT,
    JOB_TITLE STRING NOT NULL,
    DEPARTMENT STRING NOT NULL,
    STORE_ID INT NOT NULL,
    STORE_NAME STRING NOT NULL,
    STORE_PROVINCE STRING NOT NULL,
    MANAGER_ID INT,
    MANAGER_NAME STRING,
    SALARY DECIMAL(10,2),
    SALARY_BAND STRING,
    IS_ACTIVE BOOLEAN,
    -- Calculated fields
    TOTAL_ORDERS_PROCESSED INT DEFAULT 0,
    TOTAL_SALES_GENERATED DECIMAL(15,2) DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) DEFAULT 0,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Employee dimension with denormalized attributes for analytics';

-- Payment method dimension
CREATE OR REPLACE TABLE DIMENSIONS.DIM_PAYMENT_METHOD (
    PAYMENT_METHOD_KEY INT PRIMARY KEY,
    PAYMENT_METHOD_NAME STRING NOT NULL UNIQUE,
    PAYMENT_CATEGORY STRING NOT NULL, -- Digital, Cash, Card, etc.
    IS_DIGITAL BOOLEAN NOT NULL,
    IS_CASH BOOLEAN NOT NULL,
    IS_CARD BOOLEAN NOT NULL,
    IS_MOBILE_BANKING BOOLEAN NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Payment method dimension for payment analytics';

-- Shipping method dimension
CREATE OR REPLACE TABLE DIMENSIONS.DIM_SHIPPING_METHOD (
    SHIPPING_METHOD_KEY INT PRIMARY KEY,
    SHIPPING_METHOD_NAME STRING NOT NULL UNIQUE,
    SHIPPING_SPEED STRING NOT NULL, -- Fast, Standard, Slow
    DELIVERY_TIME_DAYS INT,
    IS_EXPRESS BOOLEAN NOT NULL,
    IS_SAME_DAY BOOLEAN NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Shipping method dimension for shipping analytics';

-- =====================================================
-- 4. CREATE FACT TABLES
-- =====================================================

USE SCHEMA PAKISTAN_SALES_OLAP_DB.FACTS;

-- Main sales fact table (grain: order line item)
CREATE OR REPLACE TABLE FACTS.FACT_SALES (
    SALES_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    -- Foreign keys to dimensions
    TIME_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_TIME(TIME_KEY),
    CUSTOMER_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_CUSTOMER(CUSTOMER_KEY),
    PRODUCT_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_PRODUCT(PRODUCT_KEY),
    STORE_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_STORE(STORE_KEY),
    EMPLOYEE_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_EMPLOYEE(EMPLOYEE_KEY),
    PAYMENT_METHOD_KEY INT REFERENCES DIMENSIONS.DIM_PAYMENT_METHOD(PAYMENT_METHOD_KEY),
    SHIPPING_METHOD_KEY INT REFERENCES DIMENSIONS.DIM_SHIPPING_METHOD(SHIPPING_METHOD_KEY),
    -- Business keys
    ORDER_ID INT NOT NULL,
    ORDER_DETAIL_ID INT NOT NULL,
    -- Measures (facts)
    QUANTITY_ORDERED INT NOT NULL,
    UNIT_PRICE DECIMAL(10,2) NOT NULL,
    UNIT_COST DECIMAL(10,2),
    DISCOUNT_PERCENT DECIMAL(5,2) DEFAULT 0,
    DISCOUNT_AMOUNT DECIMAL(10,2) DEFAULT 0,
    TOTAL_LINE_AMOUNT DECIMAL(12,2) NOT NULL,
    TAX_AMOUNT DECIMAL(10,2) DEFAULT 0,
    SHIPPING_COST DECIMAL(8,2) DEFAULT 0,
    FINAL_LINE_AMOUNT DECIMAL(12,2) NOT NULL,
    PROFIT_AMOUNT DECIMAL(10,2),
    PROFIT_MARGIN_PERCENT DECIMAL(5,2),
    -- Additional attributes
    ORDER_STATUS STRING NOT NULL,
    PAYMENT_STATUS STRING NOT NULL,
    ORDER_DATE DATE NOT NULL,
    SHIP_DATE DATE,
    REQUIRED_DATE DATE,
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) COMMENT = 'Main sales fact table - grain: order line item';

-- Daily sales summary fact table (grain: day)
CREATE OR REPLACE TABLE FACTS.FACT_DAILY_SALES (
    DAILY_SALES_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    -- Foreign keys
    TIME_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_TIME(TIME_KEY),
    STORE_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_STORE(STORE_KEY),
    -- Measures
    ORDER_COUNT INT NOT NULL DEFAULT 0,
    CUSTOMER_COUNT INT NOT NULL DEFAULT 0,
    PRODUCT_COUNT INT NOT NULL DEFAULT 0,
    TOTAL_QUANTITY INT NOT NULL DEFAULT 0,
    TOTAL_AMOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_DISCOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_TAX DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_SHIPPING DECIMAL(15,2) NOT NULL DEFAULT 0,
    FINAL_AMOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_PROFIT DECIMAL(15,2) NOT NULL DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    AVG_QUANTITY_PER_ORDER DECIMAL(8,2) NOT NULL DEFAULT 0,
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    -- Unique constraint
    UNIQUE(TIME_KEY, STORE_KEY)
) COMMENT = 'Daily sales summary fact table - grain: day per store';

-- Customer behavior fact table (grain: customer per time period)
CREATE OR REPLACE TABLE FACTS.FACT_CUSTOMER_BEHAVIOR (
    CUSTOMER_BEHAVIOR_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    -- Foreign keys
    TIME_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_TIME(TIME_KEY),
    CUSTOMER_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_CUSTOMER(CUSTOMER_KEY),
    -- Measures
    ORDER_COUNT INT NOT NULL DEFAULT 0,
    TOTAL_SPENT DECIMAL(15,2) NOT NULL DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    TOTAL_QUANTITY INT NOT NULL DEFAULT 0,
    UNIQUE_PRODUCTS INT NOT NULL DEFAULT 0,
    UNIQUE_STORES INT NOT NULL DEFAULT 0,
    DAYS_SINCE_FIRST_ORDER INT,
    DAYS_SINCE_LAST_ORDER INT,
    -- RFM metrics
    RECENCY_SCORE INT,
    FREQUENCY_SCORE INT,
    MONETARY_SCORE INT,
    RFM_TOTAL_SCORE INT,
    RFM_SEGMENT STRING,
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    -- Unique constraint
    UNIQUE(TIME_KEY, CUSTOMER_KEY)
) COMMENT = 'Customer behavior fact table - grain: customer per time period';

-- =====================================================
-- 5. CREATE AGGREGATE TABLES FOR PERFORMANCE
-- =====================================================

USE SCHEMA PAKISTAN_SALES_OLAP_DB.AGGREGATES;

-- Monthly sales aggregate
CREATE OR REPLACE TABLE AGGREGATES.AGG_MONTHLY_SALES (
    MONTHLY_SALES_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    YEAR INT NOT NULL,
    MONTH INT NOT NULL,
    YEAR_MONTH STRING NOT NULL,
    -- Measures
    ORDER_COUNT INT NOT NULL DEFAULT 0,
    CUSTOMER_COUNT INT NOT NULL DEFAULT 0,
    PRODUCT_COUNT INT NOT NULL DEFAULT 0,
    TOTAL_QUANTITY INT NOT NULL DEFAULT 0,
    TOTAL_AMOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_DISCOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_TAX DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_SHIPPING DECIMAL(15,2) NOT NULL DEFAULT 0,
    FINAL_AMOUNT DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_PROFIT DECIMAL(15,2) NOT NULL DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    AVG_QUANTITY_PER_ORDER DECIMAL(8,2) NOT NULL DEFAULT 0,
    -- Growth metrics
    GROWTH_VS_PREVIOUS_MONTH DECIMAL(10,2),
    GROWTH_VS_PREVIOUS_YEAR DECIMAL(10,2),
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    -- Unique constraint
    UNIQUE(YEAR, MONTH)
) COMMENT = 'Monthly sales aggregate for performance optimization';

-- Product performance aggregate
CREATE OR REPLACE TABLE AGGREGATES.AGG_PRODUCT_PERFORMANCE (
    PRODUCT_PERFORMANCE_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    PRODUCT_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_PRODUCT(PRODUCT_KEY),
    CATEGORY_ID INT NOT NULL,
    BRAND STRING NOT NULL,
    YEAR INT NOT NULL,
    MONTH INT NOT NULL,
    -- Measures
    ORDER_COUNT INT NOT NULL DEFAULT 0,
    TOTAL_QUANTITY INT NOT NULL DEFAULT 0,
    TOTAL_REVENUE DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_PROFIT DECIMAL(15,2) NOT NULL DEFAULT 0,
    AVG_ORDER_QUANTITY DECIMAL(8,2) NOT NULL DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    PROFIT_MARGIN_PERCENT DECIMAL(5,2) NOT NULL DEFAULT 0,
    -- Performance metrics
    RANK_BY_REVENUE INT,
    RANK_BY_QUANTITY INT,
    RANK_BY_PROFIT INT,
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    -- Unique constraint
    UNIQUE(PRODUCT_KEY, YEAR, MONTH)
) COMMENT = 'Product performance aggregate for performance optimization';

-- Store performance aggregate
CREATE OR REPLACE TABLE AGGREGATES.AGG_STORE_PERFORMANCE (
    STORE_PERFORMANCE_KEY BIGINT AUTOINCREMENT PRIMARY KEY,
    STORE_KEY INT NOT NULL REFERENCES DIMENSIONS.DIM_STORE(STORE_KEY),
    STORE_PROVINCE STRING NOT NULL,
    STORE_CITY STRING NOT NULL,
    YEAR INT NOT NULL,
    MONTH INT NOT NULL,
    -- Measures
    ORDER_COUNT INT NOT NULL DEFAULT 0,
    CUSTOMER_COUNT INT NOT NULL DEFAULT 0,
    TOTAL_SALES DECIMAL(15,2) NOT NULL DEFAULT 0,
    TOTAL_PROFIT DECIMAL(15,2) NOT NULL DEFAULT 0,
    AVG_ORDER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    AVG_CUSTOMER_VALUE DECIMAL(10,2) NOT NULL DEFAULT 0,
    -- Performance metrics
    RANK_BY_SALES INT,
    RANK_BY_PROFIT INT,
    RANK_BY_ORDER_COUNT INT,
    -- Audit fields
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    UPDATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    -- Unique constraint
    UNIQUE(STORE_KEY, YEAR, MONTH)
) COMMENT = 'Store performance aggregate for performance optimization';

-- =====================================================
-- 6. CREATE INDEXES FOR PERFORMANCE
-- =====================================================

-- Fact table indexes
CREATE OR REPLACE INDEX FACTS.IDX_FACT_SALES_TIME_KEY ON FACTS.FACT_SALES(TIME_KEY);
CREATE OR REPLACE INDEX FACTS.IDX_FACT_SALES_CUSTOMER_KEY ON FACTS.FACT_SALES(CUSTOMER_KEY);
CREATE OR REPLACE INDEX FACTS.IDX_FACT_SALES_PRODUCT_KEY ON FACTS.FACT_SALES(PRODUCT_KEY);
CREATE OR REPLACE INDEX FACTS.IDX_FACT_SALES_STORE_KEY ON FACTS.FACT_SALES(STORE_KEY);
CREATE OR REPLACE INDEX FACTS.IDX_FACT_SALES_ORDER_DATE ON FACTS.FACT_SALES(ORDER_DATE);

-- Dimension table indexes
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_CUSTOMER_SEGMENT ON DIMENSIONS.DIM_CUSTOMER(CUSTOMER_SEGMENT);
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_CUSTOMER_PROVINCE ON DIMENSIONS.DIM_CUSTOMER(PRIMARY_PROVINCE);
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_PRODUCT_CATEGORY ON DIMENSIONS.DIM_PRODUCT(CATEGORY_ID);
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_PRODUCT_BRAND ON DIMENSIONS.DIM_PRODUCT(BRAND);
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_STORE_PROVINCE ON DIMENSIONS.DIM_STORE(PROVINCE);
CREATE OR REPLACE INDEX DIMENSIONS.IDX_DIM_STORE_CITY ON DIMENSIONS.DIM_STORE(CITY);

-- Aggregate table indexes
CREATE OR REPLACE INDEX AGGREGATES.IDX_AGG_MONTHLY_SALES_YEAR_MONTH ON AGGREGATES.AGG_MONTHLY_SALES(YEAR, MONTH);
CREATE OR REPLACE INDEX AGGREGATES.IDX_AGG_PRODUCT_PERFORMANCE_PRODUCT ON AGGREGATES.AGG_PRODUCT_PERFORMANCE(PRODUCT_KEY);
CREATE OR REPLACE INDEX AGGREGATES.IDX_AGG_STORE_PERFORMANCE_STORE ON AGGREGATES.AGG_STORE_PERFORMANCE(STORE_KEY);

-- =====================================================
-- 7. CREATE CLUSTERING KEYS FOR PERFORMANCE
-- =====================================================

-- Cluster fact tables by commonly queried columns
ALTER TABLE FACTS.FACT_SALES CLUSTER BY (TIME_KEY, STORE_KEY);
ALTER TABLE FACTS.FACT_DAILY_SALES CLUSTER BY (TIME_KEY, STORE_KEY);
ALTER TABLE FACTS.FACT_CUSTOMER_BEHAVIOR CLUSTER BY (TIME_KEY, CUSTOMER_KEY);

-- Cluster dimension tables
ALTER TABLE DIMENSIONS.DIM_CUSTOMER CLUSTER BY (CUSTOMER_SEGMENT, PRIMARY_PROVINCE);
ALTER TABLE DIMENSIONS.DIM_PRODUCT CLUSTER BY (CATEGORY_ID, BRAND);
ALTER TABLE DIMENSIONS.DIM_STORE CLUSTER BY (PROVINCE, CITY);

-- =====================================================
-- 8. GRANT PERMISSIONS
-- =====================================================

-- Grant usage on database and schemas
GRANT USAGE ON DATABASE PAKISTAN_SALES_OLAP_DB TO ROLE PUBLIC;
GRANT USAGE ON SCHEMA PAKISTAN_SALES_OLAP_DB.DIMENSIONS TO ROLE PUBLIC;
GRANT USAGE ON SCHEMA PAKISTAN_SALES_OLAP_DB.FACTS TO ROLE PUBLIC;
GRANT USAGE ON SCHEMA PAKISTAN_SALES_OLAP_DB.AGGREGATES TO ROLE PUBLIC;
GRANT USAGE ON SCHEMA PAKISTAN_SALES_OLAP_DB.ANALYTICS TO ROLE PUBLIC;

-- Grant warehouse usage
GRANT USAGE ON WAREHOUSE PAKISTAN_OLAP_WH TO ROLE PUBLIC;
GRANT USAGE ON WAREHOUSE PAKISTAN_ETL_WH TO ROLE PUBLIC;

-- Grant table permissions
GRANT SELECT ON ALL TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.DIMENSIONS TO ROLE PUBLIC;
GRANT SELECT ON ALL TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.FACTS TO ROLE PUBLIC;
GRANT SELECT ON ALL TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.AGGREGATES TO ROLE PUBLIC;
GRANT SELECT ON ALL TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.ANALYTICS TO ROLE PUBLIC;

-- Grant future table permissions
GRANT SELECT ON FUTURE TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.DIMENSIONS TO ROLE PUBLIC;
GRANT SELECT ON FUTURE TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.FACTS TO ROLE PUBLIC;
GRANT SELECT ON FUTURE TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.AGGREGATES TO ROLE PUBLIC;
GRANT SELECT ON FUTURE TABLES IN SCHEMA PAKISTAN_SALES_OLAP_DB.ANALYTICS TO ROLE PUBLIC;

-- =====================================================
-- 9. VERIFICATION QUERIES
-- =====================================================

-- Verify table creation
SELECT 
    TABLE_SCHEMA,
    TABLE_NAME,
    ROW_COUNT,
    BYTES,
    CREATED
FROM INFORMATION_SCHEMA.TABLES 
WHERE TABLE_SCHEMA IN ('DIMENSIONS', 'FACTS', 'AGGREGATES')
ORDER BY TABLE_SCHEMA, TABLE_NAME;

-- Verify indexes
SELECT 
    INDEX_NAME,
    TABLE_NAME,
    COLUMN_NAME
FROM INFORMATION_SCHEMA.INDEXES 
WHERE TABLE_SCHEMA IN ('DIMENSIONS', 'FACTS', 'AGGREGATES')
ORDER BY TABLE_SCHEMA, TABLE_NAME, INDEX_NAME;

-- =====================================================
-- SUMMARY
-- =====================================================
/*
OLAP Data Warehouse Setup Complete!

What was created:
✅ Database: PAKISTAN_SALES_OLAP_DB
✅ Schemas: DIMENSIONS, FACTS, AGGREGATES, ANALYTICS
✅ Warehouses: PAKISTAN_OLAP_WH, PAKISTAN_ETL_WH
✅ Dimension Tables: 7 dimension tables with denormalized attributes
✅ Fact Tables: 3 fact tables for different analytical grains
✅ Aggregate Tables: 3 aggregate tables for performance optimization
✅ Indexes: Performance optimization indexes
✅ Clustering: Strategic clustering for query performance
✅ Permissions: Proper access control

Star Schema Design:
⭐ FACT_SALES (center) - Order line items
⭐ DIM_TIME - Time dimension
⭐ DIM_CUSTOMER - Customer dimension
⭐ DIM_PRODUCT - Product dimension
⭐ DIM_STORE - Store dimension
⭐ DIM_EMPLOYEE - Employee dimension
⭐ DIM_PAYMENT_METHOD - Payment method dimension
⭐ DIM_SHIPPING_METHOD - Shipping method dimension

Next steps:
1. Populate dimension tables from OLTP data
2. Populate fact tables from OLTP data
3. Create ETL processes for data refresh
4. Build analytical views
5. Deploy Streamlit application
*/
